*WORDComplete.txt*      Insert mode completion that completes an entire sequence of non-blank characters.

		       WORD COMPLETE    by Ingo Karkat
							    *WORDComplete.vim*
description			|WORDComplete-description|
usage				|WORDComplete-usage|
installation			|WORDComplete-installation|
configuration			|WORDComplete-configuration|
limitations			|WORDComplete-limitations|
known problems			|WORDComplete-known-problems|
todo				|WORDComplete-todo|
history				|WORDComplete-history|

==============================================================================
DESCRIPTION					    *WORDComplete-description*

The built-in insert mode completion |i_CTRL-N| searches for keywords.
Depending on the 'iskeyword' setting, this can be very fine-grained, so that
fragments like '--quit-if-one-screen' or '/^Vim\%((\a\+)\)\=:E123/' can take
many completion commands and are thus tedious to complete.
This plugin offers completion of sequences of non-blank characters (a.k.a.
|WORD|s), i.e. everything separated by whitespace or the start / end of line.
With this, one can quickly complete entire text fragments which are delimited
by whitespace.

SEE ALSO								     *

- Check out the |CompleteHelper.vim| plugin page (vimscript #3914) for a full
  list of insert mode completions powered by it.

==============================================================================
USAGE							  *WORDComplete-usage*

In insert mode, invoke the WORD completion via CTRL-X CTRL-W.
You can then search forward and backward via CTRL-N / CTRL-P, as usual.

							     *i_CTRL-X_CTRL-W*
CTRL-X CTRL-W		Find matches for WORDs that start with the non-blank
			characters in front of the cursor and end at the next
			whitespace.
			First, a match must start after whitespace (or at the
			beginning of the line); if that returns no results, it
			may match anywhere.
			Further use of CTRL-X a will copy the text including
			the next WORDs following the previous expansion in
			other contexts.
							     *v_CTRL-X_CTRL-W*
{Visual}CTRL-X CTRL-W	Find matches for WORDs that start with selected text
			and end at the next whitespace.

EXAMPLE							*WORDComplete-example*

To query the entire command argument --foo-bar (when "-" is not part of
'iskeyword'), just type "--f" and trigger the completion.

With the relaxed search, "pos(" will complete the entire call "pos([1,2,3])"
found in "searchpos([1,2,3])".

==============================================================================
INSTALLATION					   *WORDComplete-installation*

This script is packaged as a |vimball|. If you have the "gunzip" decompressor
in your PATH, simply edit the *.vmb.gz package in Vim; otherwise, decompress
the archive first, e.g. using WinZip. Inside Vim, install by sourcing the
vimball or via the |:UseVimball| command. >
    vim WORDComplete*.vmb.gz
    :so %
To uninstall, use the |:RmVimball| command.

DEPENDENCIES					   *WORDComplete-dependencies*

- Requires Vim 7.0 or higher.
- Requires the |CompleteHelper.vim| plugin (vimscript #3914), version 1.40 or
  higher.

==============================================================================
CONFIGURATION					  *WORDComplete-configuration*

For a permanent configuration, put the following commands into your |vimrc|:

			   *b:WORDComplete_complete* *g:WORDComplete_complete*
Analoguous to the 'complete' option, you can specify which buffers will be
scanned for completion candidates. Currently, '.' (current buffer), 'w'
(buffers from other windows), and 'b' (other listed buffers) are supported. >
    let g:WORDComplete_complete = '.,w,b'
The global setting can be overridden for a particular buffer
(b:WORDComplete_complete).
							  *WORDComplete-remap*
If you want to use a different mapping, map your keys to the
<Plug>(WORDComplete) mapping target _before_ sourcing the script (e.g.
in your |vimrc|): >
    imap <C-x><C-w> <Plug>(WORDComplete)
<
==============================================================================
LIMITATIONS					    *WORDComplete-limitations*

KNOWN PROBLEMS					 *WORDComplete-known-problems*

TODO							   *WORDComplete-todo*

IDEAS							  *WORDComplete-ideas*

==============================================================================
HISTORY							*WORDComplete-history*

1.00	RELEASEME
First published version.

0.01	30-May-2009
Started development.

==============================================================================
Copyright: (C) 2009-2014 Ingo Karkat
The VIM LICENSE applies to this plugin; see |copyright|.

Maintainer:	Ingo Karkat <ingo@karkat.de>
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
